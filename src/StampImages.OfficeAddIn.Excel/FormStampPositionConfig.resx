<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABEXAAARFwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACReDUAkXU1AJF8NQeRfDQPkX01FZF9NRqRfTUakH00FZF9
        NA+QfDQIjnozAY97MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHMwAAsZ5IAJB9MwmRfTQtkXw1ZZF9NZ2RfTW7kX010ZF9
        NeKRfTXikX010pF9Nb2RfTWhkX01bJB9NTOQfTUNink0AYt6NQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkX0yAI95NwCQezQLkH00TZF9Na6RfTXkkHw1+pF9
        Nf+SfjX/kn41/5R/Nv+Ufzb/kn42/5J+Nf+RfTX/kHw1+5F9NeeRfTW4kX01WJF8NQ6RejUAkX01AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACPfDUAjXw2ApB8NDeRfTWmkX018JB9
        Nf+Ufzb/nIY4/6eQPf+ymkL/t59G/7yjSP+8o0j/uKBG/7ObQ/+pkT3/nYc4/5SANv+RfTX/kX019JF9
        NbKRfTVCkX00A5F9NQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJF9NACQfjEFkX01XJF9
        Nd6QfDX/lH82/6OMO/+5oUr/yrVl/9rJiv/m2q7/7OPB//Dpzv/w6c7/7OPC/+fbsP/by47/zLdp/7uj
        TP+ljzz/lYA2/5B9Nf+RfTXlkX00bJB9NAqQfTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkH01AI99
        NQuQfTV7kX017ZF9Nf+eiDn/t59I/9G+df/r4b3/+PXo///+/f//////////////////////////////
        //////7/+ffs/+zjwf/TwHj/uaJJ/6CKOv+SfjX/kX019JF8NYyPezMRkHw0AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACTfTUAlH42BZF9NXiRfTX2kn42/6WPPP/Fr1r/5tqt//r47////////fv3//Xx4P/p37n/4dOg/9zM
        kf/czJH/4NKe/+jdtv/079z//Pv2///////7+fH/59yy/8myX/+pkj3/k382/5F9NfqRfDWLj302CZB9
        NgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAI58OACthRwAkX01V5F9Ne2SfjX/qZI+/8y3Z//u5sj//v79//39+v/v6M7/2ciH/8y0
        Xf/Hrk//xqtK/8WqR//Fqkf/xatJ/8euTv/Ls1r/18SA/+3lxv/9+/f////+//Hq0f/QvHD/rZZA/5N/
        Nv+RfTX0kX01a5J+MwKRfTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAl305AI58NACRfDUwkX012ZF9Nf+kjjz/zLZm//Lr1P//////+fbs/97Q
        mP/Kslj/xatJ/8asSv/GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEr/xatJ/8mwVf/cy4//9/Tn////
        ///079z/0Ltv/6iRPf+SfjX/kX015ZF9NUKSfjUAkHs0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAk340AJJ9NAeRfTWdkHw1/52HOf/ErVf/7eXG////
        ///28+T/18SA/8asS//Gq0r/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        Sv/GrEr/08B2//Tv3P//////8OnQ/8iyX/+fijr/kH01/5F9NayQfDMNkHwzAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACPejUAkn80AJF9NUWRfTXsk382/7Sc
        RP/j1qX///7+//r37v/XxYL/xatJ/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xatJ/9TAdv/39Of//////+fbsP+4oEj/lIA2/5F9NfORfTVVk34zAI98
        NgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRfDQAkXszBpF9
        NaCQfTX/oYs6/8+6bv/59er//v78/+DSnf/GrEz/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asSv/czJH//fz5//r48P/Sv3b/pY48/5F9
        Nf+RfTWxkH00CpB9NAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACQfDUAkHw1IJF9NdmSfjX/tZ1E/+fbsP//////8uzW/8y0Xf/Gq0r/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asSv/JsVX/7ubI////
        ///r4r//uqNL/5SANv+RfTXkkH01L5B9NQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJeCNQCQfTUAkX01VJB9NfWZhDf/xa9b//Tv3P/+/v3/3c2T/8WrSf/GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//Fq0n/18WC//z79//49en/y7Zm/5yHOP+QfDX8kXw1aI59MwCVfDgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJF8NQCTdDYBkX01h5B8Nf+jjTr/1MJ7//38+P/49en/z7ln/8ar
        Sv/GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEr/zLRd//Xw3v////7/2smL/6iRPP+RfTX/kX01m5F8NQaRfDUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJB8NQCQfDUIkX01opF9Nf+slT//4NGb////
        ///u5sn/yLBT/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/x65P/+nfuf//////5dms/7GZQv+SfjX/kX01t5F8
        NA6RfTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJF9NACQfDQOkX01uJJ+
        Nf+xmkL/5tqu///////m27L/x61O/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxK/+LUov//////6+G9/7ae
        Rf+SfjX/kX01zJB9NBSRfTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJF9
        NACRfTQUkX01zZJ+Nf+2nkX/6+G+///////i1KP/xqxK/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xatI/93O
        lP//////7+jM/7uiSP+Tfzb/kX0135F9NRmRfTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJF9NACQfTQTkX01ypJ+Nf+2nUX/6uC7///////j1qb/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xatI/93Olf//////7+fL/7uiSP+Tfzb/kX013pB8NBmRfDQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJF9NQCRfDUNkX01tJJ+Nf+xmUL/5diq///////n3bT/x61O/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/+PWpv//////6uC7/7WdRP+SfjX/kX01yZF8NBORfTQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJB8NQCPfDUHkX01oJF9Nf+slD//39CX////
        ///w6c7/ybBV/8asSv/GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/yK9Q/+viwP//////49em/7CYQf+RfTX/kX01spF8
        NAyRfTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJB8NACVijYAkXw1gJB8
        Nf+hizn/0r51//z79f/69+7/0bxu/8WrSf/GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//Gq0r/zbZh//fz5P/+/vz/2MaD/6WO
        O/+RfTX/kX01lY17MwSPfDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACQfTQAkH00SpB9NfCYgzf/wqtV//Ls1f//////4NKf/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//Fq0n/3MyQ//79
        +//28uP/yLJh/5qFN/+QfDX4kXw1XJJ9NACPeTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACRfTUAkX01GZF9NdGSfjX/sZlC/+PWpP//////9fDg/863Y//Fq0n/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8ar
        Sv/LtFz/8evT///////o3bX/tp9H/5N/Nf+RfTXekXw1JpF8NQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQfTUAkH01A5F9NY2QfDX/nYg5/8m0Yv/18d///////+XZ
        rP/Hrk//xqxK/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8atTf/h06D//v78//n26//Pum7/oIo6/5B8Nf+RfTWkknw1B5J9NQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChgEEAj3wzAJB9NDSRfTXikn41/7CY
        Qf/f0Jj//fz5//z69f/dzZL/xqxL/8asSv/GrEv/xqxL/8asS//GrEv/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqtK/9nIh//6+PD//v79/+PWpf+0nUX/k382/5F9NeuRfDVEkn40AI96
        NQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlX44AJR8
        OAKRfTWHkX01/5mEOP++p0//6N20/////v/69+//3c6U/8euT//Fq0n/xqxL/8asS//GrEv/xqxL/8as
        S//GrEv/xqxL/8asS//GrEv/xqxL/8arSf/HrU3/2smJ//j06P//////7OLA/8OrVv+chjn/kHw1/5F8
        NZ2SfTQHk300AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAinw7AJF9NACRfTUjkX01yZF9Nf+fiTr/xa9a/+3kw////v7//Pr1/+Xarv/Ot2T/xqxL/8Wr
        Sf/GrEr/xqxL/8asS//GrEv/xqxL/8asSv/Fq0n/xqxK/822YP/j1qb/+/nx///////w6M3/yrRh/6OM
        O/+RfTX/kX011pF8NC6OfDMAl305AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQfTUAkHw0QZF9Nd6RfTX/o4w8/8WuWf/o3bT//fz4///+
        /v/18eH/4dSi/9K9cP/JsVb/x65P/8atTP/GrEz/x65P/8mwVP/Qu2z/4NGc//Tv2//+/v3//v37/+vh
        vv/Js2D/p5A9/5J+Nf+RfTXpkH01U5qAOgCNeTEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQfTUAjX01AZF9NVmRfTXpkX01/56J
        Of++pk//3s+W//Xx3////v7////+//r47//x69L/6d+5/+TYqv/k2Kr/6N63//Dozv/59+3//v79////
        /v/38+X/4dOe/8GqU/+ijDv/kn41/5F9NfGRfTVulHw2BJN8NgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkX01AJF9
        NQSRfTVZkX013ZF9Nf+ZhDj/r5dB/8mzYf/i1KH/8evT//v68///////////////////////////////
        ///8+/b/8+3X/+XYqv/Mt2f/sppD/5uFOP+RfTX/kX0155F9NGuRfjIHkX0zAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAI98NQCMfDUBkHw1P5F9NceRfTX+kn41/52HOf+xmUH/wKlT/9G9cv/dzZL/49am/+jd
        tv/p3rf/5Neo/97Plf/Sv3b/w6xW/7KbQv+fiTn/kn41/5B8Nf+RfDXSkXw1TpR8NQOSfDUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACPfjcAw1UAAJF9NSGQfTWFkX014JB8Nf+RfTX/l4I3/6CK
        Of+qkz7/sJhB/7ScQ/+0nET/sJhB/6qTPv+hizn/mIM3/5J+Nf+QfDX/kX015pB9NJGRfDQpkHQ5AZF6
        NgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI97NQCPfDUCkH01MpF9
        NYqRfTXOkX0175B8Nf6RfTX/kX01/5J+Nf+SfjX/kX01/5F9Nf+QfDX+kX018ZF9NdORfTWWkX00O499
        MgWTfTMAgH0tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAkH0yAI99NASQfTQWkX01RpF8NXyRfTWZkX01rpF9NcORfTXEkX01spF9NZuRfTWAkX01S5F9
        NRqRfTQFkX0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi3cvAIt2LgGNezIFkXw0C5F9NRGRfTURkX01DI97
        MwaKdi4Bi3cvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD//+AH//8AAP//gAD//wAA//4AAH//AAD/+AAAH/8AAP/w
        AAAP/wAA/+AAAAf/AAD/wAAAA/8AAP/AAAAB/wAA/4AAAAH/AAD/AAAAAP8AAP8AAAAA/wAA/gAAAAB/
        AAD+AAAAAH8AAP4AAAAAfwAA/AAAAAA/AAD8AAAAAD8AAPwAAAAAPwAA/AAAAAA/AAD8AAAAAD8AAPwA
        AAAAPwAA/AAAAAA/AAD+AAAAAD8AAP4AAAAAfwAA/gAAAAB/AAD+AAAAAH8AAP8AAAAA/wAA/wAAAAD/
        AAD/gAAAAf8AAP/AAAAD/wAA/8AAAAP/AAD/4AAAB/8AAP/wAAAP/wAA//wAAB//AAD//gAAf/8AAP//
        gAH//wAA///wD///AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>