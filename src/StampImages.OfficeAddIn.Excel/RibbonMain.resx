<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPasteStamp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4wAAAABJRU5ErkJggg==
</value>
  </data>
</root>